package es.ams.basic

import scala.reflect.macros.whitebox.{Context => MacroContext}

class OperationsMacro(val c: MacroContext) {

  import c.universe._

  def insert[T](entity: Tree)(implicit t: WeakTypeTag[T]): Tree = {
    q"""
      import ${c.prefix}._
      quote {
        query[$t]
           .insert(lift($entity))
      }
    """
  }

  def insertAutoGenerated[T](entity: Tree)(implicit t: WeakTypeTag[T]): Tree = {
    q"""
      import ${c.prefix}._
      quote {
        query[$t]
           .insert(lift($entity))
           .returningGenerated(_.id_rec)
      }
    """
  }

  def update[T](entity: Tree)(implicit t: WeakTypeTag[T]): Tree = {
    q"""
      import ${c.prefix}._
      quote {
        query[$t]
           .filter(e => e.id_rec == lift($entity.id_rec))
              .update(lift($entity))
      }
    """
  }

  def delete[T](entity: Tree)(implicit t: WeakTypeTag[T]): Tree = {
    q"""
      import ${c.prefix}._
      quote {
        query[$t]
           .filter(e => e.id_rec == lift($entity.id_rec))
              .delete
      }
    """
  }

}
